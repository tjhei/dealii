<h1>Results</h1>

<h3> Errors </h3>

We first run the code and confirm that the manufactured solution converges
with the correct rates as predicted by the error analysis of mixed finite
element problems. Given sufficiently smooth exact solutions $u$ and $p$,
the errors of the Taylor-Hood element Q_k-Q_{k-1} should be

@f[
\| u -u_h \|_0 + h ( \| u- u_h\|_1 + \|p - p_h \|_0)
\leq C h^{k+1} ( \|u \|_{k+1} + \| p \|_k )
@f]

see for example Ern/Guermond "Theory and Practice of Finite Elements", Section
4.2.5 p195. This is indeed what we observe:

<table align="center" border="1">
  <tr>
    <th>&nbsp;</th>
    <th>L2 Velocity</th>
    <th>Rate</th>
    <th>L2 Pressure</th>
    <th>Rate</th>
    <th>H1 Velocity</th>
    <th>Rate</th>
  </tr>
  <tr>
    <td>3D, 3 global refinements</td>
    <td>0.000670888</td>
    <td align="center">-</td>
    <td>0.0036533</td>
    <td align="center">-</td>
    <td>0.0414704</td>
    <td align="center">-</td>
  </tr>
  <tr>
    <td>3D, 4 global refinements</td>
    <td>8.38E-005</td>
    <td>8.0</td>
    <td>0.00088494</td>
    <td>4.1</td>
    <td>0.0103781</td>
    <td>4.0</td>
  </tr>
  <tr>
    <td>3D, 5 global refinements</td>
    <td>1.05E-005</td>
    <td>8.0</td>
    <td>0.000220253</td>
    <td>4.0</td>
    <td>0.00259519</td>
    <td>4.0</td>
</th>
  </tr>
</table>

<h3> Timing Results </h3>

Here is a table summarizing the solver iterations and timings done for the
various solver combinations implemented in the code:

<table align="center" border="1">
  <tr>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <th colspan="3">UMFPACK</th>
    <th colspan="6">ILU</th>
    <th colspan="6">GMG</th>
  </tr>
  <tr>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <th colspan="2">Timings</th>
    <th>&nbsp;</th>
    <th colspan="2">Timings</th>
    <th colspan="3">Iterations</th>
    <th>&nbsp;</th>
    <th colspan="2">Timings</th>
    <th colspan="3">Iterations</th>
  </tr>
  <tr>
    <th>&nbsp;</th>
    <th>Set-up</th>
    <th>Assemble</th>
    <th>VM Peak</th>
    <th>Setup</th>
    <th>Solve</th>
    <th>VM Peak</th>
    <th>Setup</th>
    <th>Solve</th>
    <th>Outer</th>
    <th>Inner (A)</th>
    <th>Inner (S)</th>
    <th>VM Peak</th>
    <th>Setup</th>
    <th>Solve</th>
    <th>Outer</th>
    <th>Inner (A)</th>
    <th>Inner (S)</th>
  </tr>
  <tr>
    <td align="left">3D, 3 global refinements</td>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <td align="center">5305908</td>
    <td align="center">2.16s</td>
    <td align="center">2.2s</td>
    <td align="center">5013308</td>
    <td align="center">0.37s</td>
    <td align="center">0.305s</td>
    <td align="center">27</td>
    <td align="center">107</td>
    <td align="center">28</td>
    <td align="center">5036092</td>
    <td align="center">0.37s</td>
    <td align="center">1.04s</td>
    <td align="center">23</td>
    <td align="center">47</td>
    <td align="center">24</td>
  </tr>
  <tr>
    <td align="left">3D, 4 global refinements</td>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <td align="center">11674656</td>
    <td align="center">231s</td>
    <td align="center">225s</td>
    <td align="center">5365676</td>
    <td align="center">3.15s</td>
    <td align="center">8.21s</td>
    <td align="center">29</td>
    <td align="center">186</td>
    <td align="center">30</td>
    <td align="center">5689952</td>
    <td align="center">2.72s</td>
    <td align="center">9.14s</td>
    <td align="center">23</td>
    <td align="center">48</td>
    <td align="center">24</td>
  </tr>
  <tr>
    <td align="left">3D, 5 global refinements</td>
    <th>&nbsp;</th>
    <th>&nbsp;</th>
    <td align="center">-</td>
    <td align="center">-</td>
    <td align="center">-</td>
    <td align="center">8636760</td>
    <td align="center">29.4s</td>
    <td align="center">152s</td>
    <td align="center">32</td>
    <td align="center">361</td>
    <td align="center">34</td>
    <td align="center">11025296</td>
    <td align="center">21s</td>
    <td align="center">78.1s</td>
    <td align="center">22</td>
    <td align="center">46</td>
    <td align="center">23</td>
  </tr>
</table>

As can be seen from the table,

1. UMFPACK uses large amounts of memory, especially in 3d. Also, UMFPACK
timings do not scale favorably with problem size.

2. Because we are using inner solvers for $A$ and $S$, ILU and GMG require the
same number of outer iterations.

3. The number of iterations for $A$ increase for ILU with refinement leading
to worse than linear scaling in solve time. In contrast, the number of inner
iterations for $A$ stay constant with GMG leading to nearly perfect scaling in
solve time.

4. GMG needs slightly more memory than ILU to store the level and interface
matrices.

<h3> Possible extensions </h3>

<h4> Check higher order discretizations </h4>

Experiment with higher order stable FE pairs and check that you observe the
correct convergence rates.

<h4> Compare with cheap preconditioner </h4>

Currently, the boolean use_expensive in solve () is set to true. When set to false,
$\widetilde{A^{-1}}$ will be a single preconditioner application instead of an inner
CG with the GMG or ILU preconditioner, respectively.

Notice that the number of FGMRES iterations stays constant under refinement if
you use GMG (so $A^{-1}$ is approximated by a V-cycle). This means that the
Multigrid is optimal and independent of $h$.

