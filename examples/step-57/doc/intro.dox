
<i>This program was contributed by Liang Zhao and Timo Heister.</i>

<a name="Intro"></a> 
<h1>Introduction</h1>

<h3> Navier Stokes Equations </h3>

In this tutorial, we show how to solve the incompressible Navier
Stokes equations(NSE) by Newton's method. Here we consider the viscous
flows to be steady and incompressible. If a domain $\Omega \in
\mathbb{R}^{d}$, $d=2,3$, containing piecewise smooth boundary
$\partial \Omega$, and a force field $\textbf{f}$ are given, we seek
for a velocity field $\textbf{u}$ and a pressure field $\textbf{p}$
satisfying

@f{eqnarray*}
- \nu \Delta\textbf{u} + (\textbf{u} \cdot \nabla)\textbf{u} + \nabla p &=& \textbf{f}\\
- \nabla \cdot \textbf{u} &=& 0
@f}

Different from Stokes equations,as discussed in step-22 NSE is a
nonlinear system because of the convective term $(\textbf{u} \cdot
\nabla)\textbf{u}$. The first step to compute its numerical solution
is linearization of NSE and this will be done using Newton's method. A
time-dependent problem is discussed in step-35, which linearize NSE
using the solution from last time step. Therefore, no nonlinear solve is needed for
semi-implicit discretization for time-dependent problems
<h3> Linearization of Navier Stokes Equations </h3>

Moving the right hand side terms to the left, we rewrite the NSE as

@f{eqnarray*}
F(\mathbf{u}, p) = \left(
                \begin{array}{c}
                  - \nu \Delta\mathbf{u} + (\mathbf{u} \cdot \nabla)\mathbf{u} + \nabla p - \mathbf{f} \\
                  - \nabla \cdot \mathbf{u} \\
                \end{array}
              \right).
@f}

$F(\textbf{u}, p)$ is a nonlinear function whose root is the same as
the solution to the NSE. Assuming the initial guess is good enough to
guarantee the convergence of Newton's iteraton and denoting
$\textbf{x} = (\textbf{u}, p)$, Newton's iteration on a vector field
can be defined as
@f{eqnarray*} \textbf{x}^{k+1} = \textbf{x}^{k} -
(\nabla F(\textbf{x}^{k}))^{-1} F(\textbf{x}^{k}),
@f}
where
$\textbf{x}^{k+1}$ is the approximation solution in step k+1 and
$\textbf{x}^{k}$ represents the solution from the last step, and $\nabla
F(\textbf{x}^{k})$ is the Jacobian matrix evaluated at
$\textbf{x}^{k}$.

From the Newton's iteration formula, we can observe that the new
solution is obtained by adding an update term to the old one. Instead
of evaluating the Jacobian matrix and taking its inverse, we consider
the update term as a whole, that is

@f{eqnarray*}
\delta \textbf{x}^{k} = - (\nabla F(\textbf{x}^{k}))^{-1} F(\textbf{x}^{k}),
@f}
where $x^{k+1}=x^{k}+\delta x^{k}$.

Next, we solve the system
@f{eqnarray*}
\nabla F(\textbf{x}^{k}) \delta \textbf{x}^{k} = -F(\textbf{x}^{k})
@f}
for the update term $\delta \textbf{x}^{k}$. On the left of the
previous equation, $\nabla F(\textbf{x}^{k})$ represents the
directional gradient of $F(\textbf{x})$ along $\delta
\textbf{x}^{k}$. By definition, the directional gradient is given by

@f{eqnarray*}
  & &\nabla F(\mathbf{u}^{k}, p^{k}) (\delta \mathbf{u}^{k}, \delta p^{k}) \\
  \\
  &=& \lim_{\epsilon \to 0} \frac{1}{\epsilon} (F(\mathbf{u}^{k}+\epsilon \delta \mathbf{u}^{k}, p^{k}+\epsilon\nabla\delta p^{k}) - (F(\mathbf{u}^{k}, p^{k}))\\
  \\
  &=& \lim_{\epsilon \to 0} \frac{1}{\epsilon} \left(
                \begin{array}{c}
                  - \epsilon\nu\Delta\delta \mathbf{u}^{k} + \epsilon\mathbf{u}^{k}\cdot\nabla\delta\mathbf{u}^{k}+\epsilon\delta\mathbf{u}^{k}\cdot\nabla\mathbf{u}^{k}+\epsilon^{2}\delta\mathbf{u}^{k}\cdot\nabla\delta\mathbf{u}^{k}+\epsilon \nabla\delta p^{k}\\
                  - \epsilon \nabla \cdot\delta \mathbf{u}^{k}\\
                \end{array}
              \right)\\
              \\
  &=& \left(
                \begin{array}{c}
                  - \nu\Delta\delta \mathbf{u}^{k} + \mathbf{u}^{k}\cdot\nabla\delta\mathbf{u}^{k}+\delta\mathbf{u}^{k}\cdot\nabla\mathbf{u}^{k}+ \nabla\delta p^{k}\\
                  - \nabla \cdot\delta \mathbf{u}^{k}\\
                \end{array}
              \right).
@f}
Then we have a linearized system

@f{eqnarray*}
- \nu\Delta\delta\mathbf{u}^{k} + \mathbf{u}^{k}\cdot\nabla\delta\mathbf{u}^{k}+\delta\mathbf{u}^{k}\cdot\nabla\mathbf{u}^{k}+ \nabla\delta p^{k} = \mathbf{g}, \\
- \nabla \cdot\delta \mathbf{u}^{k} = \nabla\cdot\mathbf{u}^{k},
@f}

where $\textbf{g} =\textbf{f}+\nu \Delta\textbf{u}^k -(\textbf{u}^k
\cdot \nabla)\textbf{u}^k -\nabla p^k$, $\textbf{f}$ is the right hand
side of NSE, $\textbf{u}^k$ and $p^k$ are the solutions from the
previous iteration. In this linear system, the only unknowns are the
update terms: $\delta \textbf{u}^{k}$ and $\delta p^{k}$, then the
strategy we use in step-22 can be used to solve it. The weak form is
derived like it is done in step-22.

Now, Newton's iteration for solving the NSE is:

<ol>
  <li> Initialization: Initial guess $u_0$ and $p_0$, tolerance $\tau$;
  <li> Seek for update term: solve for $\delta\textbf{u}^{k}$ and $\delta p^k$;
  <li> Update the approximation: $\textbf{u}^{k+1} = \textbf{u}^{k} + \delta\textbf{u}^{k}$ and $p^{k+1} = p^{k} + \delta p^{k}$;
  <li> Check residual norm: $E^{k+1} = \|F(\mathbf{u}^{k+1}, p^{k+1})\|$. 
       If $E^{k+1} \leq \tau$, STOP. 
       If $E^{k+1} > \tau$, back to step 2. 
</ol>

<h3> Finding an Initial Guess </h3>

For Newton's method to converge, the initial guess needs to be close
enough to the solution, so it is crucial to find a good starting value.

While the viscosity $\nu$ is large, 1/400 in test case 1, we set the
initial guess to be the solution to the Stokes equation with viscosity
$\nu$. For what value of $\nu$ is large, this can only be determined via numerical experiment. In this tutorial, we accept that the solution to Stokes problem is a 
good initial guess if the visociy of NSE is 1/1000, and this is what we do at the first step while finding an initial guess if viscosity is small. 

However, it convective term $(\mathbf{u}\cdot\nabla)\mathbf{u}$
gets to be donimant if viscosity is small, like 1/10000 in test case 2. 
In this situation, we have to set up a series of auxiliary NSE with
viscosity aprroaching to the one in the target NSE. Correspondingly, we set a sequence
$\{\nu_{i}\}$ with $\nu_{n}= \nu$, and accept that the solutions to two 
NSE with viscosity $\nu_{i}$ and $\nu_{i+1}$ are closed if $|\nu_{i} - \nu_{i+1}|$ is small. 
Then we use the solution to the NSE with viscosity $\nu_{i}$ as the initial guess of the NSE
with $\nu_{i+1}$. It is like a staircase from Stokes equations to the
NSE we want to solve. 

That is we first solve a Stokes problem

@f{eqnarray*}
- \nu_{1} \Delta\textbf{u} + \nabla p &=& \textbf{f}\\
- \nabla \cdot \textbf{u} &=& 0
@f}

to get the initial guess for

@f{eqnarray*}
- \nu_{1} \Delta\textbf{u} + (\textbf{u} \cdot \nabla)\textbf{u} + \nabla p &=& \textbf{f},\\
- \nabla \cdot \textbf{u} &=& 0.
@f}

Here $\nu_{1}$ is relatively large so that the solution to Stokes problem with viscosity $\nu_{1}$
can be used as an initial guess for NSE in Newton's iteraton. 

And then the solution to

@f{eqnarray*}
- \nu_{i} \Delta\textbf{u} + (\textbf{u} \cdot \nabla)\textbf{u} + \nabla p &=& \textbf{f}\\
- \nabla \cdot \textbf{u} &=& 0.
@f}

acts as the initial guess for

@f{eqnarray*}
- \nu_{i+1} \Delta\textbf{u} + (\textbf{u} \cdot \nabla)\textbf{u} + \nabla p &=& \textbf{f}\\
- \nabla \cdot \textbf{u} &=& 0
@f}
with $|\nu_{i+1} - \nu_{i}|$ small enough. 

We repeat this process till getting the solution to the NSE with viscosity
$\nu_{n-1}$, then the initial guess for the target NSE is obtained.

<h3>The Solver and Preconditioner </h3>

At each step of Newton's iteration, the problem results in solving a
saddle point systems of the form
@f{eqnarray*}
    \left(
      \begin{array}{cc}
        A & B^{T} \\
        B & 0 \\
      \end{array}
    \right)
    \left(
      \begin{array}{c}
        U \\
        P \\
      \end{array}
    \right)
    =
    \left(
      \begin{array}{c}
        F \\
        0 \\
      \end{array}
    \right).
@f}

Instead of solving the above system, we can solve the equivalent system

@f{eqnarray*}
    \left(
      \begin{array}{cc}
        A + \gamma B^TW^{-1}B & B^{T} \\
        B & 0 \\
      \end{array}
    \right)
    \left(
      \begin{array}{c}
        U \\
        P \\
      \end{array}
    \right)
    =
    \left(
      \begin{array}{c}
        F \\
        0 \\
      \end{array}
    \right)
@f}
with a parameter $\gamma$ and an invertible matrix W.

Denoting the system matrix of the new system by $G$ and right hand
side by $b$, we solve it iteratively with right preconditioning
$P^{-1}$ as $GP^{-1}y = b$, where

@f{eqnarray*}
P^{-1} = \left(\begin{array}{cc} \tilde{A} & B^T \\ 
                                 0 & \tilde{S} \end{array}\right)^{-1},
@f}

with $\tilde{A} = A + \gamma B^TW^{-1}B$ and $\tilde{S}$ is the
corresponding Schur complement $\tilde{S} = B^T \tilde{A}^{-1} B$. we
let $W = M_p$ where $M_p$ is the pressure mass matrix, then
$\tilde{S}^{-1}$ can be approximated by

@f{eqnarray*}
\tilde{S}^{-1} \approx -(\nu+\gamma)M_p^{-1}.
@f}
See "An Augmented Lagrangian-Based Approach to the Ossen Problem,
M.Benzi and M.Olshanskii" for details.

We decompose $P^{-1}$ as

@f{eqnarray*} 
P^{-1} =
\left(\begin{array}{cc} \tilde{A}^{-1} & 0 \\ 0 & I \end{array}\right)
\left(\begin{array}{cc} I & -B^T \\ 0 & I \end{array}\right)
\left(\begin{array}{cc} I & 0 \\ 0 & \tilde{S}^{-1} \end{array}\right).
@f}

Here two inexact solvers will be needed for $\tilde{A}^{-1}$ and
$\tilde{S}^{-1}$. See [1]. Since the pressure mass
matrix is symmetric, the solver for $\tilde{S}^{-1}$ is not diffcult
and we can use CG with ILU as preconditionerr. We use the direct
solver UMFPACK for $\tilde{A}^{-1}$. The remaining is a sparse
mastrix-vector product with $B^T$. Further more, the augmented
lagrangian term will be assembled through Grad-Div stabilization:
$(\nabla \cdot \phi _{j}, \nabla \cdot \phi _{i}) \approx (B^T
M_p^{-1}B)_{ij}$. See [2].


<h3> Test Case </h3>

Here we use Lid driven cavity flow as our test case, see[3] for details. Since we do not
have reference solution for this test problem, the 2-norm of residual,
$\|b-Gx\|_2$ will be used to check convergence. The domain of Navier
Stokes equations is defined on the unit square and the right hand side
$f=0$. The boundary condition is

@f{eqnarray*} 
(u(x, y), v(x,y)) &=& (1,0)   
  \qquad\qquad \textrm{if}\ y = 1 \\
  (u(x, y), v(x,y)) &=& (0,0)
  \qquad\qquad \textrm{else}.
@f}

The error consists of the nonlinear error(from Newton's iteration) and
the discrete error(depending on mesh size). The nonlinear part
decreases as Newton's iteration implementing and this discrete error
reduces with mesh refinement. In test case, the solution from the coarse
mesh is transfered to the refined mesh as an initial guess. Therefore, the
nonlinear error is always under the tolerance of Neweton's iteraton and
the discrete error is reduced while the mesh is getting finer. 

Inside the loop, we involve three solvers: one for $\tilde{A}^{-1}$,
one for $M_p^{-1}$ and one for $Gx=b$. The first two
solvers are involved in the preconditioner and the third one gives us
the Newton's update term. Inexact computation for preconditioner
probably causes the preconditioned system is not as good as we expect,
but the solution will not be changed if the linear system is solved by
a Krylov subspace iterative method, like FGMRES. Therefore, all
solvers can be inexact, and this implies the whole approach can be
cheap if we set the tolerance to be moderately high. In test, the
tolerance of CG is 1e-6 and we set the tolerance of relative residual,
$\frac{\|b-Gx\|_2}{\|b\|_2}$, to be 1e-4. In spite of high
tolerance, we finally get the residual of 1e-14. Also, we use a simple line
search algorithm for globalization of the Newton method.

The cavity reference values for RE=400 and RE=10000 are from [4] and [5], respectively.

<h3> Reference </h3>
<ol>

  <li>  An Augmented Lagrangian-Based Approach to the Ossen Problem, M.Benzi and M.Olshanskii
  <li>  Efficient augmented Lagrangian-type preconditioning for the Oseen problem using Grad-Div stabilization, Timo Heister and Gerd Rapin
  <li>  http://www.cfd-online.com/Wiki/Lid-driven_cavity_problem
  <li>  High-Re solution for incompreesible flow using the Navier-Stokes Equations and a Multigrid Method, U.Ghia, K.N.Ghia, and C.T.Shin
  <li>  Numerical solutions of 2-D steady incompressible driven cavity flow at high Reynolds numbers, E.Erturk, T.C.Corke and C.Gokcol

</ol>






















